{"version":3,"sources":["App.js","index.js"],"names":["formItemLayout","labelCol","xs","span","sm","wrapperCol","App","useState","spinning","setSpinning","name","onFinish","values","list","length","fetch","headers","body","JSON","stringify","method","then","res","window","close","message","error","autoComplete","style","marginTop","List","fields","add","remove","map","field","key","align","Item","label","fieldKey","rules","required","placeholder","offset","MinusCircleOutlined","onClick","type","block","icon","PlusOutlined","htmlType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAIMA,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,GACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,GACZC,GAAI,CAAED,KAAM,MA6FDG,EAxFH,WAAO,IAAD,EAEgBC,oBAAS,GAFzB,mBAETC,EAFS,KAECC,EAFD,KAqBhB,OACE,kBAAC,IAAD,CAAMD,SAAUA,GACd,kBAAC,IAAD,CAAME,KAAK,yBAAyBC,SAnBvB,SAAAC,GACXA,EAAOC,MAAQD,EAAOC,KAAKC,OAAS,GAEtCL,GAAY,GAEZM,MAAM,YAAa,CACjBC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,GACrBQ,OAAQ,SACPC,MAAK,SAAAC,GAAG,OAAIC,OAAOC,YAEtBC,IAAQC,MAAM,gDAM0CC,aAAa,MAAMC,MAAO,CAAEC,UAAW,KAC7F,kBAAC,IAAKC,KAAN,CAAWpB,KAAK,SACb,SAACqB,EAAD,GAA8B,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACf,OACE,6BACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,kBAAC,IAAD,CAAKC,IAAKD,EAAMC,IAAKC,MAAM,OACzB,kBAAC,IAAD,CAAKlC,KAAM,IACT,kBAAC,IAAKmC,KAAN,iBACMH,EACAnC,EAFN,CAGEuC,MAAM,qBACN7B,KAAM,CAACyB,EAAMzB,KAAM,WACnB8B,SAAU,CAACL,EAAMK,SAAU,SAC3BC,MAAO,CAAC,CAAEC,UAAU,EAAMjB,QAAS,4CAEnC,kBAAC,IAAD,CAAOkB,YAAY,4CAGvB,kBAAC,IAAD,CAAKxC,KAAM,IACT,kBAAC,IAAKmC,KAAN,iBACMH,EACAnC,EAFN,CAGEuC,MAAM,2BACN7B,KAAM,CAACyB,EAAMzB,KAAM,OACnB8B,SAAU,CAACL,EAAMK,SAAU,QAC3BC,MAAO,CAAC,CAAEC,UAAU,EAAMjB,QAAS,oEAEnC,kBAAC,IAAD,CAAOkB,YAAY,oEAIvB,kBAAC,IAAD,CAAKxC,KAAM,EAAGyC,OAAQ,GACpB,kBAACC,EAAA,EAAD,CACEC,QAAS,WACPb,EAAOE,EAAMzB,cAMvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKP,KAAM,GAAIyC,OAAQ,GACrB,kBAAC,IAAD,CACEG,KAAK,SACLD,QAAS,WACPd,KAEFgB,OAAK,EACLC,KAAM,kBAACC,EAAA,EAAD,OANR,gBAUA,kBAAC,IAAD,CAAQH,KAAK,UAAUI,SAAS,SAASvB,MAAO,CAAEC,UAAW,KAA7D,0B,OCvFpBuB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e2f2af43.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button, Spin, Row, Col, message } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 4 },\n    sm: { span: 4 },\n  },\n  wrapperCol: {\n    xs: { span: 6 },\n    sm: { span: 20 },\n  },\n};\n\n\nconst App = () => {\n\n  const [spinning, setSpinning] = useState(false)\n\n  const onFinish = values => {\n    if (values.list && values.list.length > 0) {\n\n      setSpinning(true)\n\n      fetch('/download', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values),\n        method: 'post'\n      }).then(res => window.close())\n    } else {\n      message.error('起码得加一个吧!')\n    }\n  };\n\n  return (\n    <Spin spinning={spinning}>\n      <Form name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\" style={{ marginTop: 16 }}>\n        <Form.List name=\"list\">\n          {(fields, { add, remove }) => {\n            return (\n              <div>\n                {fields.map(field => (\n                  <Row key={field.key} align='top'>\n                    <Col span={10}>\n                      <Form.Item\n                        {...field}\n                        {...formItemLayout}\n                        label='文件名'\n                        name={[field.name, 'dirName']}\n                        fieldKey={[field.fieldKey, 'first']}\n                        rules={[{ required: true, message: '请输入文件名!' }]}\n                      >\n                        <Input placeholder=\"请输入文件名!\" />\n                      </Form.Item>\n                    </Col>\n                    <Col span={10}>\n                      <Form.Item\n                        {...field}\n                        {...formItemLayout}\n                        label='接口地址'\n                        name={[field.name, 'url']}\n                        fieldKey={[field.fieldKey, 'last']}\n                        rules={[{ required: true, message: '请输入有效的接口地址!' }]}\n                      >\n                        <Input placeholder=\"请输入有效的接口地址!\" />\n                      </Form.Item>\n                    </Col>\n\n                    <Col span={2} offset={1}>\n                      <MinusCircleOutlined\n                        onClick={() => {\n                          remove(field.name);\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                ))}\n                <Row>\n                  <Col span={20} offset={1}>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => {\n                        add();\n                      }}\n                      block\n                      icon={<PlusOutlined />}\n                    >\n                      添加\n                  </Button>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{ marginTop: 16 }}>确定 </Button>\n                  </Col>\n                </Row>\n              </div>\n            )\n          }}\n        </Form.List>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.less'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}